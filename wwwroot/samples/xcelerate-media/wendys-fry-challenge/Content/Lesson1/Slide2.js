var manifest = {
    left1: '../../Assets/Images/Game/Level1/left1.png',
    left2: '../../Assets/Images/Game/Level1/left2.png',
    left3: '../../Assets/Images/Game/Level1/left3.png',
    left4: '../../Assets/Images/Game/Level1/left4.png',
    left5: '../../Assets/Images/Game/Level1/left5.png',
    left6: '../../Assets/Images/Game/Level1/left6.png',
    right1: '../../Assets/Images/Game/Level1/right1.png',
    right2: '../../Assets/Images/Game/Level1/right2.png',
    right3: '../../Assets/Images/Game/Level1/right3.png',
    right4: '../../Assets/Images/Game/Level1/right4.png',
    right5: '../../Assets/Images/Game/Level1/right5.png',
    right6: '../../Assets/Images/Game/Level1/right6.png',
    right7: '../../Assets/Images/Game/Level1/right7.png',
    right8: '../../Assets/Images/Game/Level1/right8.png',
    right9: '../../Assets/Images/Game/Level1/right9.png'
};

var sounds = {
    bad: new Howl({ src: '../../Assets/Sounds/tone_negative.mp3' }),
    neutral: new Howl({ src: '../../Assets/Sounds/tone_neutral.mp3' }),
    good: new Howl({ src: '../../Assets/Sounds/tone_positive.mp3' }),
    alarm: new Howl({ src: '../../Assets/Sounds/tone_alarm.mp3' }),

    S01_C01: new Howl({
        src: '../../Assets/Sounds/Scenario1/S01_C01.mp3',
        onerror: function (e) { console.log(e); console.log('???'); }
    }),
    S01_C02: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C02.mp3' }),
    S01_C03: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C03.mp3' }),
    S01_C04: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C04.mp3' }),
    S01_C05: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C05.mp3' }),
    S01_C06: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C06.mp3' }),
    S01_C07: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C07.mp3' }),
    S01_C08: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C08.mp3' }),
    S01_C09: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C09.mp3' }),
    S01_C10: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C10.mp3' }),
    S01_C11: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C11.mp3' }),
    S01_C12: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C12.mp3' }),
    S01_C13: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C13.mp3' }),
    S01_C14: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C14.mp3' }),
    S01_C15: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C15.mp3' }),
    S01_C16: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C16.mp3' }),
    S01_C17: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C17.mp3' }),
    S01_C18: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C18.mp3' }),
    S01_C19: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C19.mp3' }),
    S01_C20: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C20.mp3' }),
    S01_C21: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C21.mp3' }),
    S01_C22: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C22.mp3' }),
    S01_C23: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C23.mp3' }),
    S01_C24: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C24.mp3' }),
    S01_C25: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C25.mp3' }),
    S01_C26: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C26.mp3' }),
    S01_C27: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C27.mp3' }),
    S01_C28: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C28.mp3' }),
    S01_C29: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C29.mp3' }),
    S01_C30: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C30.mp3' }),
    S01_C31: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C31.mp3' }),
    S01_C32: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C32.mp3' }),
    S01_C33: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C33.mp3' }),
    S01_C34: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C34.mp3' }),
    S01_C35: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C35.mp3' }),
    S01_C36: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C36.mp3' }),
    S01_C37: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C37.mp3' }),
    S01_C38: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C38.mp3' }),
    S01_C39: new Howl({ src: '../../Assets/Sounds/Scenario1/S01_C39.mp3' })
};

var script, game;

function StartGame() {
    game = new FryChallenge.FryGame();
    script = [
        { operation: 'instruct', value: 'Let\'s walk through the basics. You currently have no product on-hand.', showNext: true, shellHelper: 'next-arrow', audioClip: 'S01_C01' },
        { operation: 'instruct', value: 'Your OPS Leader instructs you to cook 1 basket of Fries and half a basket of Crispy Chicken Nuggets.', shellHelper: 'next-arrow', showNext: true, audioClip: 'S01_C02' },
        { operation: 'instruct', value: 'To drop the half basket of Crispy Chicken Nuggets, drag the Nuggets bag to the correct Fryer.' },
        { operation: 'show-tools', args: ['salt', 'scoop', 'fries', 'nuggets', 'skimmer', 'tongs', 'trashcan'], value: 'nuggets', wait: true, target: { zone: FryChallenge.Oil, index: 4 }, helper: 'drag-tooltray-nuggets', audioClip: 'S01_C03', score: [500, 300, 150, 0] },
        { operation: 'increment-view', args: 'right' },
        { operation: 'hide-tools' },
        { operation: 'instruct', value: 'We start by dropping the Nuggets, because they have a longer cook time than fries.', shellHelper: 'next-arrow', showNext: true, audioClip: 'S01_C04' },
        { operation: 'instruct', value: 'Select the Left Cook Timer.' },
        { operation: 'timer', args: { minTime: 270, speed: 0, time: 270, awaitClick: true }, target: { zone: 'oil', index: 4 }, helper: 'nugget-timer', wait: true, audioClip: 'S01_C05', score: [500, 300, 150, 0] },
        { operation: 'instruct', value: 'After 15 to 30 seconds, gently shake the basket of Chicken Nuggets.' },
        { operation: 'timer', args: { minTime: 255, speed: 300, time: 270, awaitFinish: true }, target: { zone: 'oil', index: 4 }, wait: true, audioClip: 'S01_C06' },
        { operation: 'instruct', value: 'Select the handle of the basket to gently shake the Chicken Nuggets.' },
        { operation: 'hotspot', wait: true, target: { zone: FryChallenge.Handles, index: 4 }, helper: 'nugget-shake', payoff: '2-1', audioClip: 'S01_C07', score: [500, 300, 150, 0] },
        { operation: 'instruct', value: 'Now, drop the bag of Fries into the fryer closest to the holding bins.' },
        { operation: 'show-tools', args: ['salt', 'scoop', 'fries', 'nuggets', 'skimmer', 'tongs', 'trashcan'], helper: 'drag-tooltray-fries', value: 'fries', audioClip: 'S01_C08', wait: true, target: { zone: FryChallenge.Oil, index: 0 }, score: [500, 300, 150, 0] },
        { operation: 'increment-view', args: 'right' },
        { operation: 'payoff', value: '2-2', wait: true },
        { operation: 'hide-tools' },
        { operation: 'instruct', value: 'Select the Left Cook Timer.' },
        { operation: 'timer', args: { minTime: 0, speed: 50, time: 170, awaitClick: true }, helper: 'fries-l1-timer', target: { zone: 'oil', index: 0 }, wait: true, audioClip: 'S01_C09', score: [500, 300, 150, 0] },
        { operation: 'instruct', value: 'Wait for the Fries to finish cooking.' },
        { operation: 'timer', args: { minTime: 85, speed: 50, time: 255, awaitFinish: true }, target: { zone: 'oil', index: 4 }, wait: true, audioClip: 'S01_C10' },
        { operation: 'instruct', value: 'The basket of Fries has finished cooking. Turn off the cook timer to silence the alarm.' },
        { operation: 'reset-timer', target: { zone: 'oil', index: 0 }, helper: 'fries-l1-reset', wait: true, audioClip: 'S01_C11', score: [500, 300, 150, 0] },
        { operation: 'instruct', value: 'Lift the Fries out of the oil and drain for five seconds.' },
        { operation: 'hotspot', wait: true, target: { zone: FryChallenge.Oil, index: 0 }, helper: 'fries-lift', audioClip: 'S01_C12', score: [500, 300, 150, 0] },
        { operation: 'increment-view', args: 'right' },
        { operation: 'instruct', value: 'Gently shake the basket to remove excess oil.', shellHelper: 'next-arrow', showNext: true, audioClip: 'S01_C13' },
        { operation: 'payoff', value: '2-3', wait: true },
        { operation: 'instruct', value: 'Make sure you use 2 hands when dropping and lifting the fry basket!', shellHelper: 'next-arrow', showNext: true, audioClip: 'S01_C15' },
        { operation: 'instruct', value: 'Select and drag the Left basket from Fryer Number One to the appropriate holding bin.' },
        {
            operation: 'dragspot', helper: 'fries-l1-drag',
            target: { zone: FryChallenge.Fries, index: 0 },
            args: {
                origin: { zone: FryChallenge.Oil, index: 0 },
                startOperation: { operation: 'increment-view', args: 'right' },
                wrongOperation: { operation: 'decrement-view', args: 'right' },
                image: 'basket_fries.png'
            },
            wait: true, audioClip: 'S01_C16', score: [500, 300, 150, 0]
        },
        { operation: 'increment-view', args: 'left' },
        { operation: 'increment-view', args: 'right' },
        { operation: 'instruct', value: 'Nice work! Baskets labeled L should be placed in the Left bin. L goes to L, R goes to R.', shellHelper: 'next-arrow', showNext: true, audioClip: 'S01_C17' },
        { operation: 'instruct', value: 'Next, we need to salt the Fries. For one basket of Fries, evenly salt the Fries by turning the Accusalt Dispenser upside down, allowing the pre-portioned Sea Salt to dispense from the bottom of the Accusalt Dispenser.', shellHelper: 'next-arrow', showNext: true, audioClip: 'S01_C18' },
        { operation: 'instruct', value: 'Hold the Accusalt Dispenser level over the Natural-Cut Fries and pass it front to back over the Fries to ensure proper Sea Salt coverage.', shellHelper: 'next-arrow', showNext: true, audioClip: 'S01_C19' },
        { operation: 'instruct', value: 'Now, select the Accusalt Dispenser to salt the Fries.' },
        { operation: 'click-tool', args: ['salt', 'scoop', 'fries', 'nuggets', 'skimmer', 'tongs', 'trashcan'], helper: 'click-tooltray-salt', value: 'salt', wait: true, audioClip: 'S01_C20', score: [500, 300, 150, 0] },
        { operation: 'payoff', value: '2-5', wait: true },
        { operation: 'instruct', value: 'Select the Fry Scoop to gently lift and thoroughly mix the salted Fries.' },
        { operation: 'click-tool', args: ['salt', 'scoop', 'fries', 'nuggets', 'skimmer', 'tongs', 'trashcan'], helper: 'click-tooltray-scoop', value: 'scoop', wait: true, audioClip: 'S01_C21', score: [500, 300, 150, 0] },
        { operation: 'payoff', value: '2-6', wait: true },
        { operation: 'increment-view', args: 'left' },
        { operation: 'instruct', value: 'After mixing, spread the Fries over the length of the Fry Bin.', shellHelper: 'next-arrow', showNext: true, audioClip: 'S01_C22' },
        { operation: 'instruct', value: 'Select the Left Hold Timer.' },
        { operation: 'timer', args: { minTime: 225, speed: 2000, time: 300, awaitClick: true }, helper: 'fries-l1-hold', target: { zone: 'fries', index: 0 }, wait: true, audioClip: 'S01_C23', score: [500, 300, 150, 0] },
        { operation: 'timer', args: { minTime: 10, speed: 2000, time: 85 }, target: { zone: 'oil', index: 4 } },
        { operation: 'instruct', value: 'You now have five minutes to serve these fries before they are discarded.', shellHelper: 'next-arrow', showNext: true, audioClip: 'S01_C24' },
        { operation: 'instruct', value: 'The OPS Leader tells you to portion out two Large Fry Orders.', shellHelper: 'next-arrow', showNext: true, audioClip: 'S01_C25' },
        { operation: 'instruct', value: 'Select the Fry Scoop.' },
        { operation: 'click-tool', args: ['salt', 'scoop', 'fries', 'nuggets', 'skimmer', 'tongs', 'trashcan'], helper: 'click-tooltray-scoop', value: 'scoop', wait: true, audioClip: 'S01_C26', score: [500, 300, 150, 0] },
        { operation: 'instruct', value: 'Select the Fry Cartons to portion the Fries.' },
        { operation: 'carton', value: 'fries', wait: true, audioClip: 'S01_C27', helper: 'carton-fries' },
        { operation: 'increment-view', args: 'left' },
        { operation: 'instruct', value: 'Now you just portion the Fries, and they are ready to serve!', shellHelper: 'next-arrow', showNext: true, audioClip: 'S01_C28' },
        { operation: 'carton-off', value: 'fries' },
        { operation: 'timer', args: { minTime: 0, speed: 1000, time: 225 }, target: { zone: 'fries', index: 0 } },
        { operation: 'instruct', value: 'Wait for the Nuggets to finish cooking.' },
        { operation: 'timer', args: { minTime: 0, speed: 500, time: 10, awaitFinish: true }, target: { zone: 'oil', index: 4 }, wait: true, audioClip: 'S01_C29' },
        { operation: 'instruct', value: 'The basket of Nuggets has finished cooking. Turn off the cook timer to silence the alarm.' },
        { operation: 'reset-timer', target: { zone: 'oil', index: 4 }, helper: 'nugget-reset', wait: true, audioClip: 'S01_C30', score: [500, 300, 150, 0] },
        { operation: 'instruct', value: 'Lift the Chicken Nuggets out of the oil and let them drain for five seconds.' },
        { operation: 'hotspot', wait: true, target: { zone: FryChallenge.Oil, index: 4 }, helper: 'nugget-lift', audioClip: 'S01_C31', score: [500, 300, 150, 0] },
        { operation: 'increment-view', args: 'right' },
        { operation: 'instruct', value: 'Next, dump the cooked Chicken Nuggets into the front Chicken Nugget Holding Bin.' },
        {
            operation: 'dragspot', helper: 'nugget-drag',
            target: { zone: FryChallenge.Nuggets, index: 0 },
            args: {
                origin: { zone: FryChallenge.Oil, index: 4 },
                startOperation: { operation: 'increment-view', args: 'right' },
                wrongOperation: { operation: 'decrement-view', args: 'right' },
                image: 'basket_nuggets.png'
            },
            wait: true, audioClip: 'S01_C32', score: [500, 300, 150, 0]
        },
        { operation: 'increment-view', args: 'left' },
        { operation: 'increment-view', args: 'right' },
        { operation: 'instruct', value: 'Activate the Front (F) Hold Timer for the Chicken Nuggets you just placed in the holding bin.' },
        { operation: 'timer', args: { minTime: 0, speed: 1000, time: 1800, awaitClick: true }, helper: 'nugget-hold', target: { zone: 'nuggets', index: 1 }, wait: true, audioClip: 'S01_C33', score: [500, 300, 150, 0] },
        { operation: 'instruct', value: 'You now have 30 minutes to serve these Chicken Nuggets before they must be discarded.', shellHelper: 'next-arrow', showNext: true, audioClip: 'S01_C34' },
        { operation: 'instruct', value: 'The OPS Leader tells you to portion out two, 10-piece Nugget Orders.', shellHelper: 'next-arrow', showNext: true, audioClip: 'S01_C35' },
        { operation: 'instruct', value: 'Select the Tongs.' },
        { operation: 'click-tool', args: ['salt', 'scoop', 'fries', 'nuggets', 'skimmer', 'tongs', 'trashcan'], helper: 'click-tooltray-tongs', value: 'tongs', wait: true, audioClip: 'S01_C36', score: [500, 300, 150, 0] },
        { operation: 'instruct', value: 'Select the Cartons to portion the Nuggets.' },
        { operation: 'carton', value: 'nuggets', wait: true, audioClip: 'S01_C37', helper: 'carton-nuggets' },
        { operation: 'increment-view', args: 'left' },
        { operation: 'instruct', value: 'Note that you should only portion 1 Nugget at a time to prevent tearing the breading.', shellHelper: 'next-arrow', showNext: true, audioClip: 'S01_C38' },
        { operation: 'carton-off', value: 'nuggets' },
        { operation: 'instruct', value: 'Great job! You\'ve just successfully completed your first order of Fries and Nuggets!', shellHelper: 'next-arrow-end', showNext: true, audioClip: 'S01_C39' },
        { operation: 'next-slide', wait: true }
    ];
}